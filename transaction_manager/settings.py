"""
Django settings for transaction_manager project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import dj_database_url
from pathlib import Path
import os

import environ
env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# PWA Service Worker
PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'transaction_manager/static/js', 'service-worker.js')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--7-$xg9#$m!s#+x!0$q^vl1uv=*yajot=p0j20s(nt)b7wq969'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default = False)

# round upto
ROUND_UPTO = env("ROUND_UPTO", default = 0)

ALLOWED_HOSTS = [
    '127.0.0.1',
    '.vercel.app',
    '.all-go-rythm.software',
    'localhost'
]


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'core',
    'group',

    'crispy_forms',
    'crispy_bootstrap5',
    
    'pwa',  # adding pwa app
]


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# PWA CONFIGURATION
PWA_APP_NAME = "Transaction Manager"
PWA_APP_DESCRIPTION = "A simple transaction manager"
PWA_APP_THEME_COLOR = "#000000"
PWA_APP_BACKGROUND_COLOR = "#ffffff"
PWA_APP_DISPLAY = "standalone"
PWA_APP_SCOPE = "/"
PWA_APP_ORIENTATION = "any"
PWA_APP_START_URL = "/"
PWA_APP_STATUS_BAR_COLOR = "default"
PWA_APP_ICONS = [
    {
        "src": "/static/logo/favicon-16x16.png",
        "sizes": "16x16",
        "type": "image/png"
    },
    {
        "src": "/static/logo/favicon.ico",
        "sizes": "160x160",
        "type": "image/icon"
    },
    # {
    #     "src": "/static/logo/favicon-32x32.png",
    #     "sizes": "32x32",
    #     "type": "image/png"
    # },
    # {
    #     "src": "/static/logo/android-chrome-192x192.png",
    #     "sizes": "192x192",
    #     "type": "image/png"
    # },
    # {
    #     "src": "/static/logo/android-chrome-512x512.png",
    #     "sizes": "512x512",
    #     "type": "image/png"
    # },
    
]
PWA_APP_ICONS_APPLE = [
    {
        "src": "/static/logo/apple-touch-icon.png",
        "sizes": "180x180",
        "type": "image/png"
    }
]
PWA_APP_SPLASH_SCREEN = [
    {
        'src': 'static/images/icon.png',
        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)',
        'sizes': '320x568',
        'type': 'image/png'
    }
]
PWA_APP_DIR = "ltr"
PWA_APP_LANG = "en-US"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware', #add whitenoise
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'transaction_manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'transaction_manager' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'transaction_manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
dbs = {
    'local' : {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'transaction_manager' / 'db.sqlite3',
    },
    'online' : dj_database_url.parse(env('DATABASE_URL'))
}
DATABASES = {
    'default': dbs[env('DB_type', default = 'online')]
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
# MEDIA_URL = 'media/'

STATIC_ROOT = BASE_DIR / 'transaction_manager' / 'static_cdn'
# MEDIA_ROOT = STATIC_URL / 'media'

ADMIN_MEDIA_URL = STATIC_URL + 'admin/' # admin is now served by staticfiles


STATICFILES_DIRS = [
    BASE_DIR / 'transaction_manager' / STATIC_URL,
]

STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"  # new


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'core.User'
AUTH_GROUP_MODEL = ''

LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "home"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.office365.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
SERVER_EMAIL = EMAIL_HOST_USER
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER